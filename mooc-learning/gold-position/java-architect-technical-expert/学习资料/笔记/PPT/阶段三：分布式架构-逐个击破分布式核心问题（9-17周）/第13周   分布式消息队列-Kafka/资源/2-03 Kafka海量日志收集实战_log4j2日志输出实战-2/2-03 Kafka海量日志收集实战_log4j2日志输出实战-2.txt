2-03 Kafka海量日志收集实战_log4j2日志输出实战-2
1.com.ccarlos.collector.web.IndexController
/**
	 * [%d{yyyy-MM-dd'T'HH:mm:ss.SSSZZ}]
	 * [%level{length=5}]
	 * [%thread-%tid]
	 * [%logger]
	 * [%X{hostName}]
	 * [%X{ip}]
	 * [%X{applicationName}]
	 * [%F,%L,%C,%M]
	 * [%m] ## '%ex'%n
	 * -----------------------------------------------
	 * [2019-09-18T14:42:51.451+08:00]
	 * [INFO]
	 * [main-1]
	 * [org.springframework.boot.web.embedded.tomcat.TomcatWebServer]
	 * []
	 * []
	 * []
	 * [TomcatWebServer.java,90,org.springframework.boot.web.embedded.tomcat.TomcatWebServer,initialize]
	 * [Tomcat initialized with port(s): 8001 (http)] ## ''
	 * @return
	 */
	@RequestMapping(value = "/index")
	public String index() {
		InputMDC.putMDC();

		log.info("我是一条info日志");

		log.warn("我是一条warn日志");

		log.error("我是一条error日志");

		return "idx";
	}

	@RequestMapping(value = "/err")
	public String err() {
		InputMDC.putMDC();
		try {
			int a = 1/0;
		} catch (Exception e) {
			log.error("算术异常", e);
		}
		return "err";
	}

2.com.ccarlos.collector.util.InputMDC
@Component
public class InputMDC implements EnvironmentAware {

	private static Environment environment;

	@Override
	public void setEnvironment(Environment environment) {
		InputMDC.environment = environment;
	}

	public static void putMDC() {
		MDC.put("hostName", NetUtil.getLocalHostName());
		MDC.put("ip", NetUtil.getLocalIp());
		MDC.put("applicationName", environment.getProperty("spring.application.name"));
	}

}