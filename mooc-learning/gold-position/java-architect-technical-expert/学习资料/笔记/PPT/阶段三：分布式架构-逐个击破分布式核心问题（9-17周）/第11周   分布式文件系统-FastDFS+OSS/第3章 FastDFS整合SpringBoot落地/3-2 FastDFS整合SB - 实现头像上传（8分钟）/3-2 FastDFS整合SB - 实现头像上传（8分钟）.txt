3-2 FastDFS整合SB - 实现头像上传（8分钟）
1.代码实现
 @PostMapping("uploadFace")
    public JSONResult uploadFace(
            String userId,
            MultipartFile file,
            HttpServletRequest request,
            HttpServletResponse response) throws Exception {

        String path = "";
        // 开始文件上传
        if (file != null) {
            // 获得文件上传的文件名称
            String fileName = file.getOriginalFilename();
            if (StringUtils.isNotBlank(fileName)) {

                // 文件重命名  imooc-face.png -> ["imooc-face", "png"]
                String fileNameArr[] = fileName.split("\\.");

                // 获取文件的后缀名
                String suffix = fileNameArr[fileNameArr.length - 1];

                if (!suffix.equalsIgnoreCase("png") &&
                        !suffix.equalsIgnoreCase("jpg") &&
                        !suffix.equalsIgnoreCase("jpeg")) {
                    return JSONResult.errorMsg("图片格式不正确！");
                }

                path = fdfsService.upload(file, suffix);

//                path = fdfsService.uploadOSS(file, userId, suffix);
                System.out.println(path);
            }
        } else {
            return JSONResult.errorMsg("文件不能为空！");
        }

        return JSONResult.ok();
    }

2.修改前端测试
修改foodie-center的userinfo.html
			// console.log(userInfo);
						// 请求后端获得最新数据
						//var serverUrl = app.serverUrl;
						//var fileServer = serverUrl + '/userInfo/uploadFace?userId=' + userInfo.id
						var fileServer = 'http://localhost:8066/fdfs/uploadFace?userId=' + userInfo.id
						axios.defaults.withCredentials = true;
						axios.post(
							//	serverUrl + '/userInfo/uploadFace?userId=' + userInfo.id,
							    fileServer,
								multiForm,
								{
									headers: {
										'Content-Type': 'multipart/form-data',
										'headerUserId': userInfo.id,
										'headerUserToken': userInfo.userUniqueToken
									}
								})
