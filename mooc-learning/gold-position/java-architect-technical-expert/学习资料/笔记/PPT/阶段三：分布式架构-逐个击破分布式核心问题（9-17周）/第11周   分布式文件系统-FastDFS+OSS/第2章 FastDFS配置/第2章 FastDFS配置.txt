第2章 FastDFS配置
2-1 配置FastDFS环境准备工作（9分钟）
Tracker和Storage节点操作
1.上传安装文件至服务器
mkdir /home/software/FastDFS -p

2.安装环境
yum install -y gcc gcc-c++
yum -y install libevent

3.解压安装相关安装文件
(1).解压安装libfastcommon
解压:
cd /home/software/FastDFS
tar -zxvf libfastcommon-1.0.42.tar.gz
编译安装:
cd libfastcommon-1.0.42
./make.sh
./make.sh install

(2).安装FastDFS
解压:
cd /home/software/FastDFS
tar -zxvf fastdfs-6.04.tar.gz
编译安装:
cd fastdfs-6.04
./make.sh
./make.sh install

4.查看FastDFS相关命令
cd /usr/bin
[root@pinyoyougou-docker fastdfs-6.04]# cd /usr/bin/
[root@pinyoyougou-docker bin]# ls fdfs_*
fdfs_appender_test   fdfs_delete_file    fdfs_regenerate_filename  fdfs_trackerd
fdfs_appender_test1  fdfs_download_file  fdfs_storaged             fdfs_upload_appender
fdfs_append_file     fdfs_file_info      fdfs_test                 fdfs_upload_file
fdfs_crc32           fdfs_monitor        fdfs_test1

5.查看相关配置文件
[root@pinyoyougou-docker bin]# cd /etc/fdfs/
[root@pinyoyougou-docker fdfs]# ll
总用量 28
-rw-r--r--. 1 root root  1834 4月  11 08:51 client.conf.sample
-rw-r--r--. 1 root root 10085 4月  11 08:51 storage.conf.sample
-rw-r--r--. 1 root root   527 4月  11 08:51 storage_ids.conf.sample
-rw-r--r--. 1 root root  8038 4月  11 08:51 tracker.conf.sample

6.拷贝相关配置文件至/etc/fdfs/
cd /home/software/FastDFS/fastdfs-6.04/conf/
cp * /etc/fdfs/

[root@pinyoyougou-docker conf]# cd /etc/fdfs/
[root@pinyoyougou-docker fdfs]# ll
总用量 116
-rw-r--r--. 1 root root 23981 4月  11 08:56 anti-steal.jpg
-rw-r--r--. 1 root root  1834 4月  11 08:56 client.conf
-rw-r--r--. 1 root root  1834 4月  11 08:51 client.conf.sample
-rw-r--r--. 1 root root   955 4月  11 08:56 http.conf
-rw-r--r--. 1 root root 31172 4月  11 08:56 mime.types
-rw-r--r--. 1 root root 10085 4月  11 08:56 storage.conf
-rw-r--r--. 1 root root 10085 4月  11 08:51 storage.conf.sample
-rw-r--r--. 1 root root   527 4月  11 08:56 storage_ids.conf
-rw-r--r--. 1 root root   527 4月  11 08:51 storage_ids.conf.sample
-rw-r--r--. 1 root root  8038 4月  11 08:56 tracker.conf
-rw-r--r--. 1 root root  8038 4月  11 08:51 tracker.conf.sample



2-2 附：配置FastDFS环境准备工作



2-3 配置tracker服务（4分钟）
tracker节点操作
1.修改tracker.conf
cd /etc/fdfs/

vim tracker.conf
修改内容:
# the base path to store data and log files
base_path=/usr/local/fastdfs/tracker

创建目录
mkdir /usr/local/fastdfs/tracker -p

查看tracker.conf配置信息
more tracker.conf | grep ^[^#]

2.启动tracker服务
[root@pinyoyougou-docker fdfs]# /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf
[root@pinyoyougou-docker fdfs]# ps -ef|grep tracker
root      2975     1  0 09:13 ?        00:00:00 /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf
root      2983  2173  0 09:13 pts/0    00:00:00 grep --color=auto tracker



2-4 附：配置tracker服务



2-5 配置storage服务（12分钟）
2-5 配置storage服务（12分钟）
Storage节点操作
1.修改storage.conf
cd /etc/fdfs

vim storage.conf
# the name of the group this storage server belongs to
#
# comment or remove this item for fetching from tracker server,
# in this case, use_storage_id must set to true in tracker.conf,
# and storage_ids.conf must be configured correctly.
group_name=imooc
# the base path to store data and log files
# NOTE: the binlog files maybe are large, make sure
#       the base path has enough disk space
base_path=/usr/local/fastdfs/storage

mkdir /usr/local/fastdfs/storage -p

# store_path#, based on 0, to configure the store paths to store file
# if store_path0 not exists, it's value is base_path (NOT recommended)
# the paths must be exist
#
# IMPORTANT NOTE:
#       the store paths' order is very important, don't mess up!!!
#       the base_path should be independent (different) of the store paths
store_path0=/usr/local/fastdfs/storage

# tracker_server can ocur more than once for multi tracker servers.
# the value format of tracker_server is "HOST:PORT",
#   the HOST can be hostname or ip address,
#   and the HOST can be dual IPs or hostnames seperated by comma,
#   the dual IPS must be an inner (intranet) IP and an outer (extranet) IP,
#   or two different types of inner (intranet) IPs.
#   for example: 192.168.2.100,122.244.141.46:22122
#   another eg.: 192.168.1.10,172.17.4.21:22122

tracker_server=192.168.253.166:22122
#tracker_server=192.168.209.122:22122

2.启动storage服务
[root@pinyoyougou-docker fdfs]# /usr/bin/fdfs_storaged /etc/fdfs/storage.conf
[root@pinyoyougou-docker fdfs]# ps -ef|grep storage
root      3003     1  0 09:33 ?        00:00:00 /usr/bin/fdfs_storaged /etc/fdfs/storage.conf
root      3005  2177  0 09:33 pts/0    00:00:00 grep --color=auto storage

3.通过命令行进行测试
Storage节点操作
(1).vim client.conf
mkdir /usr/local/fastdfs/client

# the base path to store log files
base_path=/usr/local/fastdfs/client
# tracker_server can ocur more than once for multi tracker servers.
# the value format of tracker_server is "HOST:PORT",
#   the HOST can be hostname or ip address,
#   and the HOST can be dual IPs or hostnames seperated by comma,
#   the dual IPS must be an inner (intranet) IP and an outer (extranet) IP,
#   or two different types of inner (intranet) IPs.
#   for example: 192.168.2.100,122.244.141.46:22122
#   another eg.: 192.168.1.10,172.17.4.21:22122
tracker_server=192.168.253.166:22122

Storage节点操作
(2).进行测试
[root@pinyoyougou-docker bin]# cd /usr/bin/
[root@pinyoyougou-docker bin]# ls fdfs_*
fdfs_appender_test   fdfs_delete_file    fdfs_regenerate_filename  fdfs_trackerd
fdfs_appender_test1  fdfs_download_file  fdfs_storaged             fdfs_upload_appender
fdfs_append_file     fdfs_file_info      fdfs_test                 fdfs_upload_file
fdfs_crc32           fdfs_monitor        fdfs_test1

wget https://class.imooc.com/static/module/sale2/img/javaarchitect/content3-1.jpg
[root@pinyoyougou-docker bin]# ls conten*
content3-1.jpg
[root@pinyoyougou-docker bin]# mv content3-1.jpg /home/
[root@pinyoyougou-docker bin]# cd /home/
[root@pinyoyougou-docker home]# ll
总用量 144
-rw-r--r--. 1 root   root   143732 10月 26 20:19 content3-1.jpg
drwx------. 3 esuser esuser    124 4月   8 22:36 esuser
drwxr-xr-x. 3 root   root      132 4月  11 08:58 software
[root@pinyoyougou-docker home]# mv content3-1.jpg imooc.jpg

[root@pinyoyougou-docker home]# /usr/bin/fdfs_test /etc/fdfs/client.conf upload imooc.jpg This is FastDFS client test program v6.04

Copyright (C) 2008, Happy Fish / YuQing

FastDFS may be copied only under the terms of the GNU General
Public License V3, which may be found in the FastDFS source kit.
Please visit the FastDFS Home Page http://www.fastken.com/
for more detail.

[2021-04-11 09:50:08] DEBUG - base_path=/usr/local/fastdfs/client, connect_timeout=10, network_timeout=60, tracker_server_count=1, anti_steal_token=0, anti_steal_secret_key length=0, use_connection_pool=0, g_connection_pool_max_idle_time=3600s, use_storage_id=0, storage server id count: 0

tracker_query_storage_store_list_without_group:
	server 1. group_name=, ip_addr=192.168.253.170, port=23000

group_name=imooc, ip_addr=192.168.253.170, port=23000
storage_upload_by_filename
group_name=imooc, remote_filename=M00/00/00/wKj9qmByVdCAdX0tAAIxdMx6dLU135.jpg
source ip address: 192.168.253.170
file timestamp=2021-04-11 09:50:08
file size=143732
file crc32=3430577333
example file url: http://192.168.253.170/imooc/M00/00/00/wKj9qmByVdCAdX0tAAIxdMx6dLU135.jpg
storage_upload_slave_by_filename
group_name=imooc, remote_filename=M00/00/00/wKj9qmByVdCAdX0tAAIxdMx6dLU135_big.jpg
source ip address: 192.168.253.170
file timestamp=2021-04-11 09:50:08
file size=143732
file crc32=3430577333
example file url: http://192.168.253.170/imooc/M00/00/00/wKj9qmByVdCAdX0tAAIxdMx6dLU135_big.jpg

4.查看上传成功后的数据文件
[root@pinyoyougou-docker data]# cd /usr/local/fastdfs/storage/data
[root@pinyoyougou-docker data]# ls
00  0E  1C  2A  38  46  54  62  70  7E  8C  9A  A8  B6  C4  D2  E0  EE  FC
01  0F  1D  2B  39  47  55  63  71  7F  8D  9B  A9  B7  C5  D3  E1  EF  FD
02  10  1E  2C  3A  48  56  64  72  80  8E  9C  AA  B8  C6  D4  E2  F0  fdfs_storaged.pid
03  11  1F  2D  3B  49  57  65  73  81  8F  9D  AB  B9  C7  D5  E3  F1  FE
04  12  20  2E  3C  4A  58  66  74  82  90  9E  AC  BA  C8  D6  E4  F2  FF
05  13  21  2F  3D  4B  59  67  75  83  91  9F  AD  BB  C9  D7  E5  F3  storage_stat.dat
06  14  22  30  3E  4C  5A  68  76  84  92  A0  AE  BC  CA  D8  E6  F4  sync
07  15  23  31  3F  4D  5B  69  77  85  93  A1  AF  BD  CB  D9  E7  F5
08  16  24  32  40  4E  5C  6A  78  86  94  A2  B0  BE  CC  DA  E8  F6
09  17  25  33  41  4F  5D  6B  79  87  95  A3  B1  BF  CD  DB  E9  F7
0A  18  26  34  42  50  5E  6C  7A  88  96  A4  B2  C0  CE  DC  EA  F8
0B  19  27  35  43  51  5F  6D  7B  89  97  A5  B3  C1  CF  DD  EB  F9
0C  1A  28  36  44  52  60  6E  7C  8A  98  A6  B4  C2  D0  DE  EC  FA
0D  1B  29  37  45  53  61  6F  7D  8B  99  A7  B5  C3  D1  DF  ED  FB
[root@pinyoyougou-docker 00]# cd /usr/local/fastdfs/storage/data/00/00
[root@pinyoyougou-docker 00]# ls wKj9qmByVdCAdX0tAAIxdMx6dLU135*
wKj9qmByVdCAdX0tAAIxdMx6dLU135_big.jpg    wKj9qmByVdCAdX0tAAIxdMx6dLU135.jpg
wKj9qmByVdCAdX0tAAIxdMx6dLU135_big.jpg-m  wKj9qmByVdCAdX0tAAIxdMx6dLU135.jpg-m



2-6 附：配置storage服务



2-7 配置 Nginx FastDFS实现文件服务器（16分钟）
1.安装nginx模块服务
Storage节点操作（nginx和Storage节点需要在同一台服务器）
(1).解压fastdfs-nginx-module-1.22.tar.gz
cd /home/software/FastDFS
tar -zxvf fastdfs-nginx-module-1.22.tar.gz
cd fastdfs-nginx-module-1.22
cd src

(2).修改配置文件config
vim config
ngx_module_incs="/usr/include"
CORE_INCS="$CORE_INCS /usr/include"

(3).拷贝配置文件至/etc/fdfs/
cp mod_fastdfs.conf /etc/fdfs/

2.安装nginx
(1).安装基础环境
yum install -y pcre pcre-devel
yum install -y zlib zlib-devel
yum install -y openssl openssl-devel
(2).安装nginx服务
tar -zxvf nginx-1.16.1.tar.gz
cd nginx-1.16.1
mkdir /var/temp/nginx -p
配置:
./configure \
--prefix=/usr/local/nginx \
--pid-path=/var/run/nginx/nginx.pid \
--lock-path=/var/lock/nginx.lock \
--error-log-path=/var/log/nginx/error.log \
--http-log-path=/var/log/nginx/access.log \
--with-http_gzip_static_module \
--http-client-body-temp-path=/var/temp/nginx/client \
--http-proxy-temp-path=/var/temp/nginx/proxy \
--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \
--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \
--http-scgi-temp-path=/var/temp/nginx/scgi \
--add-module=/home/software/FastDFS/fastdfs-nginx-module-1.22/src
编译:
make
安装:
make install

3.修改mod_fastdfs.conf
cd /etc/fdfs/
mkdir /usr/local/fastdfs/tmp
vim mod_fastdfs.conf

# the base path to store log files
base_path=/usr/local/fastdfs/tmp

# FastDFS tracker_server can ocur more than once, and tracker_server format is
#  "host:port", host can be hostname or ip address
# valid only when load_fdfs_parameters_from_tracker is true
tracker_server=192.168.253.166:22122

# the group name of the local storage server
group_name=imooc

# if the url / uri including the group name
# set to false when uri like /M00/00/00/xxx
# set to true when uri like ${group_name}/M00/00/00/xxx, such as group1/M00/xxx
# default value is false
url_have_group_name = true

4.修改nginx配置文件
cd /usr/local/nginx/conf
80端口配置修改为
    server {
        listen       8888;
        server_name  localhost;

        location /imooc/M00 {
           ngx_fastdfs_module;
        }
    }

5.启动nginx
../sbin/nginx

6.测试
cd /usr/local/fastdfs/storage/data/00/00/
[root@pinyoyougou-docker 00]# ls
wKj9qmByVdCAdX0tAAIxdMx6dLU135_big.jpg    wKj9qmByVdCAdX0tAAIxdMx6dLU135.jpg
wKj9qmByVdCAdX0tAAIxdMx6dLU135_big.jpg-m  wKj9qmByVdCAdX0tAAIxdMx6dLU135.jpg-m

访问http://192.168.253.170:8888/imooc/M00/00/00/wKj9qmByVdCAdX0tAAIxdMx6dLU135_big.jpg报404

修改配置文件
cd /etc/fdfs/
vim mod_fastdfs.conf
# store_path#, based 0, if store_path0 not exists, it's value is base_path
# the paths must be exist
# must same as storage.conf
store_path0=/usr/local/fastdfs/storage

再次访问http://192.168.253.170:8888/imooc/M00/00/00/wKj9qmByVdCAdX0tAAIxdMx6dLU135_big.jpg成功