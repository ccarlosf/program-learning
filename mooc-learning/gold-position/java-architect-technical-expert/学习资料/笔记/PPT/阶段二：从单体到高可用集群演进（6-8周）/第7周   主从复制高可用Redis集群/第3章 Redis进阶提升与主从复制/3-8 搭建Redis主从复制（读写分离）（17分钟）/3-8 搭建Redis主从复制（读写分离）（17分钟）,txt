1.redis-1查看主从状态信息
127.0.0.1:6379> info replication
# Replication
role:master
connected_slaves:0
master_replid:bb14c66b5019fa2696dc7ffeef7e869683f9e44a
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0
127.0.0.1:6379>

2.从节点redis-2操作（配置一主一从）
修改配置文件redis.conf
cd /usr/local/redis/
/Rep
(1)配置主节点地址
#
#   +------------------+      +---------------+
#   |      Master      | ---> |    Replica    |
#
#    a given number of replicas.
# 3) Replication is automatic and does not need user intervention. After a
#    network partition replicas automatically try to reconnect to masters
#    and resynchronize with them.
#
#replicaof <masterip> <masterport>
replicaof 192.168.253.155 6379

(2)配置密码
# If the master is password protected (using the "requirepass" configuration
# directive below) it is possible to tell the replica to authenticate before
# starting the replication synchronization process, otherwise the master will
# refuse the replica request.
#
masterauth imooc

(3)配置从节点只读（默认配置）
# You can configure a replica instance to accept writes or not. Writing against
# a replica instance may be useful to store some ephemeral data (because data
# written on a replica will be easily deleted after resync with the master) but
# may also cause problems if clients are writing to it because of a
# misconfiguration.
#
# Since Redis 2.6 by default replicas are read-only.
#
# Note: read only replicas are not designed to be exposed to untrusted clients
# on the internet. It's just a protection layer against misuse of the instance.
# Still a read only replica exports by default all the administrative commands
# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve
# security of read only replicas using 'rename-command' to shadow all the
# administrative / dangerous commands.
replica-read-only yes

(4)删除数据文件
cd /usr/local/redis/working/
rm appendonly.aof dump.rdb

(5)重启redis
[root@pinyoyougou-docker working]# /etc/init.d/redis_init_script stop
Stopping ...
Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.
Redis stopped
[root@pinyoyougou-docker working]# /etc/init.d/redis_init_script start
Starting Redis server...
2226:C 22 Mar 2021 22:04:16.333 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
2226:C 22 Mar 2021 22:04:16.333 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=2226, just started
2226:C 22 Mar 2021 22:04:16.333 # Configuration loaded

重启后working目录又出现appendonly.aof dump.rdb（从master中同步来的）
键值数据也从master中同步来
[root@pinyoyougou-docker working]# redis-cli
127.0.0.1:6379> auth imooc
OK
127.0.0.1:6379> keys *
1) "imooc"
2) "sex"
3) "age"

(6)查询集群状态信息
role:slave 为从节点
127.0.0.1:6379> info replication
# Replication
role:slave
master_host:192.168.253.155
master_port:6379
master_link_status:up
master_last_io_seconds_ago:5
master_sync_in_progress:0
slave_repl_offset:126
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:7ab22bc7fad73414c69186a40f2b6f172e3be20a
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:126
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:57
repl_backlog_histlen:70

3.查询redis-1集群状态信息
已完成一主一从
connected_slaves:1
slave0:ip=192.168.253.156,port=6379,state=online,offset=238,lag=1

127.0.0.1:6379> info replication
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.253.156,port=6379,state=online,offset=238,lag=1
master_replid:7ab22bc7fad73414c69186a40f2b6f172e3be20a
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:238
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:238

4.测试一主一从
(1)主节点redis-1设置值后，会同步给从节点

(2)从节点redis-2不允许进行写操作
127.0.0.1:6379> set abc 123
(error) READONLY You can't write against a read only replica.


5.从节点redis-2操作（配置一主二从）
(1)删除数据文件
cd /usr/local/redis/working
rm dump.rdb appendonly.aof

(2)修改核心配置文件
vim redis.conf
/Repli
################################# REPLICATION #################################

# Master-Replica replication. Use replicaof to make a Redis instance a copy of
# another Redis server. A few things to understand ASAP about Redis replication.
#
#   +------------------+      +---------------+
#   |      Master      | ---> |    Replica    |
#   | (receive writes) |      |  (exact copy) |
#   +------------------+      +---------------+
#
# 1) Redis replication is asynchronous, but you can configure a master to
#    stop accepting writes if it appears to be not connected with at least
#    a given number of replicas.
# 2) Redis replicas are able to perform a partial resynchronization with the
#    master if the replication link is lost for a relatively small amount of
#    time. You may want to configure the replication backlog size (see the next
#    sections of this file) with a sensible value depending on your needs.
# 3) Replication is automatic and does not need user intervention. After a
#    network partition replicas automatically try to reconnect to masters
#    and resynchronize with them.
#
# replicaof <masterip> <masterport>
replicaof 192.168.253.155 6379
# If the master is password protected (using the "requirepass" configuration
# directive below) it is possible to tell the replica to authenticate before
# starting the replication synchronization process, otherwise the master will
# refuse the replica request.
#
masterauth imooc

# You can configure a replica instance to accept writes or not. Writing against
# a replica instance may be useful to store some ephemeral data (because data
# written on a replica will be easily deleted after resync with the master) but
# may also cause problems if clients are writing to it because of a
# misconfiguration.
#
# Since Redis 2.6 by default replicas are read-only.
#
# Note: read only replicas are not designed to be exposed to untrusted clients
# on the internet. It's just a protection layer against misuse of the instance.
# Still a read only replica exports by default all the administrative commands
# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve
# security of read only replicas using 'rename-command' to shadow all the
# administrative / dangerous commands.
replica-read-only yes

(3)重启redis
[root@pinyoyougou-docker redis]# /etc/init.d/redis_init_script stop
Stopping ...
Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.
Redis stopped
[root@pinyoyougou-docker redis]# /etc/init.d/redis_init_script start
Starting Redis server...
3376:C 23 Mar 2021 07:11:44.918 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
3376:C 23 Mar 2021 07:11:44.918 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=3376, just started
3376:C 23 Mar 2021 07:11:44.918 # Configuration loaded

(4)查看集群状态
127.0.0.1:6379> info replication
# Replication
role:slave
master_host:192.168.253.155
master_port:6379
master_link_status:up
master_last_io_seconds_ago:7
master_sync_in_progress:0
slave_repl_offset:45372
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:7ab22bc7fad73414c69186a40f2b6f172e3be20a
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:45372
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:45317
repl_backlog_histlen:56
127.0.0.1:6379>

6.重新回到主节点redis-1查看集群状态
127.0.0.1:6379> info replication
# Replication
role:master
connected_slaves:2
slave0:ip=192.168.253.156,port=6379,state=online,offset=45470,lag=0
slave1:ip=192.168.253.157,port=6379,state=online,offset=45470,lag=0
master_replid:7ab22bc7fad73414c69186a40f2b6f172e3be20a
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:45470
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:45470
127.0.0.1:6379>

7.测试一主二从
(1)停止redis-2从节点
/etc/init.d/redis_init_script stop
(2)redis-1主节点查看集群状态信息
从节点只剩一点
127.0.0.1:6379> info replication
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.253.157,port=6379,state=online,offset=115218,lag=1
master_replid:7ab22bc7fad73414c69186a40f2b6f172e3be20a
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:115218
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:115218
127.0.0.1:6379>
(3)reids-1设置值后，redis-3也能把数据同步过来
127.0.0.1:6379> set k1 123
OK
127.0.0.1:6379> set k2 456
OK
127.0.0.1:6379> set k3 789
OK
127.0.0.1:6379>
(4)redis-2恢复启动后,k1,k2,k3也能再同步过来
 /etc/init.d/redis_init_script start
127.0.0.1:6379> keys *
1) "k2"
2) "k1"
3) "age"
4) "sex"
5) "mail"
6) "imooc"
7) "k3"
(5)停止主节点redis-1后
从节点redis-2集群状态信息 master_link_status:down
127.0.0.1:6379> info replication
# Replication
role:slave
master_host:192.168.253.155
master_port:6379
master_link_status:down
master_last_io_seconds_ago:-1
master_sync_in_progress:0
slave_repl_offset:115625
master_link_down_since_seconds:10
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:7ab22bc7fad73414c69186a40f2b6f172e3be20a
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:115625
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:115500
repl_backlog_histlen:126

从节点redis-3集群状态信息 master_link_status:down
127.0.0.1:6379> info replication
# Replication
role:slave
master_host:192.168.253.155
master_port:6379
master_link_status:down
master_last_io_seconds_ago:-1
master_sync_in_progress:0
slave_repl_offset:115625
master_link_down_since_seconds:19
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:7ab22bc7fad73414c69186a40f2b6f172e3be20a
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:115625
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:45317
repl_backlog_histlen:70309