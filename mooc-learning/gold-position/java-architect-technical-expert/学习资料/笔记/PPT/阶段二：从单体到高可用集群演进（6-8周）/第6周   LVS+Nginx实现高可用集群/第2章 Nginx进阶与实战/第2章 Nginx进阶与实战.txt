2-0 在Nginx中解决跨域问题（9分钟）
vim imooc.conf
server {
        listen       90;
        server_name  localhost;

#允许跨域请求的域，*代表所有
add_header 'Access-Control-Allow-Origin' *;
#允许带上cookie请求
add_header 'Access-Control-Allow-Credentials' 'true';
#允许请求的方法，比如 GET/POST/PUT/DELETE
add_header 'Access-Control-Allow-Methods' *;
#允许请求的header
add_header 'Access-Control-Allow-Headers' *;

        location / {
            root   /home/foodie-shop;
            index  index.html;
        }

        location /imooc {
            root   /home;
        }


        location /static {
            alias  /home/imooc;
        }

    }



2-1 在Nginx中配置静态资源防盗链（4分钟）
Nginx 防盗链配置支持
server {
        listen       90;
        server_name  localhost;

#允许跨域请求的域，*代表所有
add_header 'Access-Control-Allow-Origin' *;
#允许带上cookie请求
add_header 'Access-Control-Allow-Credentials' 'true';
#允许请求的方法，比如 GET/POST/PUT/DELETE
add_header 'Access-Control-Allow-Methods' *;
#允许请求的header
add_header 'Access-Control-Allow-Headers' *;

#对源站点验证
valid_referers *.imooc.com;
#非法引入会进入下方判断
if ($invalid_referer) {
    return 404;
}

        location / {
            root   /home/foodie-shop;
            index  index.html;
        }

        location /imooc {
            root   /home;
        }


        location /static {
            alias  /home/imooc;
        }

    }



2-2 Nginx的模块化设计解析（9分钟）



2-3 Nginx的集群负载均衡解析（7分钟）



2-4 附：Nginx 跨域配置支持



2-5 附：Nginx 防盗链配置支持



2-6 四层、七层与DNS负载均衡（10分钟）