3-1 高可用集群架构 Keepalived 双机主备原理



3-2 Keepalived安装（7分钟）
1.安装nginx备用节点

2.安装keepalived主节点，上传keepalived至/home/software

3.解压keepalived安装包
tar -zxvf keepalived-2.0.18.tar.gz

4.进入keepalived目录
cd keepalived-2.0.18

5.配置keepalived
./configure --prefix=/usr/local/keepalived --sysconf=/etc

6.编译和安装
make && make install

7.查找keepalived安装在哪
whereis keepalived



3-3 附：Keepalived安装部署



3-4 Keepalived核心配置文件（10分钟）
1.查看网卡信息
ip addr
ens33

2.编辑keepalived.conf
vim /etc/keepalived/keepalived.conf
global_defs {
   # 路由id: 当前安装keepalived节点主机的标识符，全局唯一
   router_id keep_171
#   vrrp_skip_check_adv_addr
#   vrrp_strict
#   vrrp_garp_interval 0
#   vrrp_gna_interval 0
}

# 计算机节点
vrrp_instance VI_1 {
    # 表示的状态，当前的171位nginx的主节点，MASTER/BACKUP
    state MASTER
    # 当前实例绑定的网卡
    interface ens33
    # 保证主备节点一致
    virtual_router_id 51
    # 优先级/权重，谁的优先级高，在MASTER挂掉以后，就能成为MASTER
    priority 100
    # 主备之间同步检查的时间间隔，默认1s
    advert_int 1
    # 认证授权的密码，防止非法节点的进入
    authentication {
        auth_type PASS
        auth_pass 1111
    }

    virtual_ipaddress {
        192.168.1.161
    }
}

3.sbin目录启动keepalived

4.查看网卡信息
ip addr
多了192.168.1.161 (VIP虚拟IP)
2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 00:0c:29:f7:66:13 brd ff:ff:ff:ff:ff:ff
    inet 192.168.253.129/24 brd 192.168.253.255 scope global dynamic ens33
       valid_lft 1175sec preferred_lft 1175sec
    inet 192.168.1.161/32 scope global ens33
       valid_lft forever preferred_lft forever
    inet6 fe80::c569:ba05:f195:be69/64 scope link tentative dadfailed
       valid_lft forever preferred_lft forever
    inet6 fe80::fe9:a7ce:86ef:28b0/64 scope link tentative dadfailed
       valid_lft forever preferred_lft forever
    inet6 fe80::64ba:dea0:c4c3:6593/64 scope link tentative dadfailed
       valid_lft forever preferred_lft forever

5.查看keepalived相关进程
ps -ef|grep keepalive



3-5 附：配置 Keepalived - 主



3-6 把Keepalived 注册为系统服务（7分钟）
1.服务器192.168.253.129中修改nginx中imooc.conf
增加
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }
     }

2.进入keepalived安装目录
cd /home/software/keepalived-2.0.18/keepalived/etc

3.拷贝相关配置文件到系统路径
cp init.d/keepalived /etc/init.d/
cp sysconfig/keepalived /etc/sysconfig/

4.刷新keepalived配置文件，系统服务生效
systemctl daemon-reload

5.启动keepalived服务
systemctl start keepalived.service

6.停止keepalived服务
systemctl stop keepalived.service

7.重启keepalived服务
systemctl restart keepalived.service



3-7 Keepalived实现双机主备高可用（8分钟）
1.安装keepalived备用节点，上传keepalived至/home/software

2.解压keepalived安装包
tar -zxvf keepalived-2.0.18.tar.gz

3.进入keepalived目录
cd keepalived-2.0.18

4.配置keepalived
./configure --prefix=/usr/local/keepalived --sysconf=/etc

5.编译和安装
make && make install

6.查找keepalived安装在哪
whereis keepalived

7.进入keepalived配置文件目录
cd /etc/keepalived
rm keepalived.conf
vim keepalived.conf

global_defs {
   # 路由id: 当前安装keepalived节点主机的标识符，全局唯一
   router_id keep_172
}

# 计算机节点
vrrp_instance VI_1 {
    # 表示的状态，当前的171位nginx的主节点，MASTER/BACKUP
    state BACKUP
    # 当前实例绑定的网卡
    interface ens33
    # 保证主备节点一致
    virtual_router_id 51
    # 优先级/权重，谁的优先级高，在MASTER挂掉以后，就能成为MASTER
    priority 80
    # 主备之间同步检查的时间间隔，默认1s
    advert_int 1
    # 认证授权的密码，防止非法节点的进入
    authentication {
        auth_type PASS
        auth_pass 1111
    }

    virtual_ipaddress {
        192.168.253.161
    }
}

8.启动keepalived
./keepalived

9.浏览器访问http://www.173.com/（虚拟VIP）测试

10.停止192.168.253.129（171）主节点的keepalived，
systemctl stop keepalived.service
再访问http://www.173.com/（虚拟VIP）测试，访问到192.168.253.148（172）备用节点

11.再启动192.168.253.129（171）主节点的keepalived，
systemctl start keepalived.service
再访问http://www.173.com/（虚拟VIP）测试，访问到192.168.253.129（171）主节点



3-8 附：配置 Keepalived - 备



3-9 Keepalived配置Nginx自动重启，实现7x24不间断服务（10:32）
1.如果192.168.253.129（171）主节点的nginx
./nginx -s stop
浏览器无法访问http://www.173.com/

2.编写脚本让keepalived检测重启nginx，如果还是无法启动，则切换访问到192.168.253.148（172）备用节点
主节点中
cd /etc/keepalived/
vim check_nginx_alive_or_not.sh

#!/bin/bash

A=`ps -C nginx --no-header |wc -l`
# 判断nginx是否宕机，如果宕机了，尝试重启
if [ $A -eq 0 ];then
    /usr/local/nginx/sbin/nginx
    # 等待一小会再次检查nginx，如果没有启动成功，则停止keepalived，使其启动备用机
    sleep 3
    if [ `ps -C nginx --no-header |wc -l` -eq 0 ];then
        killall keepalived
    fi
fi

3.给check_nginx_alive_or_not.sh授予权限
chmod +x check_nginx_alive_or_not.sh

4.手动运行脚本，让nginx启动
./check_nginx_alive_or_not.sh

5.修改keepalived核心配置文件，让keepalived定时监听运行脚本check_nginx_alive_or_not.sh
vrrp_script check_nginx_alive {
    script "/etc/keepalived/check_nginx_alive_or_not.sh"
    interval 2 # 每隔两秒运行上一行脚本
    weight 10 # 如果脚本运行成功，则升级权重+10
    # weight -10 #如果脚本运行失败，则降低权重-10
}

6.在 vrrp_instance 中新增监控的脚本
track_script {
 check_nginx_alive # 追踪 nginx 脚本
}

7.keepalived.conf配置内容
! Configuration File for keepalived

global_defs {
   # 路由id: 当前安装keepalived节点主机的标识符，全局唯一
   router_id keep_171
}

vrrp_script check_nginx_alive {
    script "/etc/keepalived/check_nginx_alive_or_not.sh"
    interval 2 # 每隔两秒运行上一行脚本
    weight 10 # 如果脚本运行成功，则升级权重+10
    # weight -10 #如果脚本运行失败，则降低权重-10
}

# 计算机节点
vrrp_instance VI_1 {
    # 表示的状态，当前的171位nginx的主节点，MASTER/BACKUP
    state MASTER
    # 当前实例绑定的网卡
    interface ens33
    # 保证主备节点一致
    virtual_router_id 51
    # 优先级/权重，谁的优先级高，在MASTER挂掉以后，就能成为MASTER
    priority 100
    # 主备之间同步检查的时间间隔，默认1s
    advert_int 1
    # 认证授权的密码，防止非法节点的进入
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    track_script {
        check_nginx_alive # 追踪 nginx 脚本
    }
    virtual_ipaddress {
        192.168.253.161
    }
}

8.重启keepalived，使配置生效
systemctl restart keepalived

9.停止nginx ，测试keepalived能否让nginx重启
./nginx -s stop



3-10 附：Keepalived配置Nginx自动重启



3-11 高可用集群架构 Keepalived 双主热备原理（6分钟）